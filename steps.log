create owner, db, table in postgress

postgres=# create user gaurav with password 'password' createdb;
CREATE ROLE
postgres=# \du
                                   List of roles
 Role name |                         Attributes
      | Member of
-----------+------------------------------------------------------
------+-----------
 gaurav    | Create DB
      | {}
 postgres  | Superuser, Create role, Create DB, Replication, Bypas
s RLS | {}

exit

login as new created user
psql -U gaurav -d postgres -p 9110
postgres=> create database nodelogin;
CREATE DATABASE
postgres=> \l
                                                 List of databases
   Name    |  Owner   | Encoding |          Collate           |
        Ctype            |   Access privileges
-----------+----------+----------+----------------------------+---
-------------------------+-----------------------
 nodelogin | gaurav   | UTF8     | English_United States.1252 | En
glish_United States.1252 |
 postgres  | postgres | UTF8     | English_United States.1252 | En
glish_United States.1252 |
 template0 | postgres | UTF8     | English_United States.1252 | En
glish_United States.1252 | =c/postgres          +
           |          |          |                            |
                         | postgres=CTc/postgres
 template1 | postgres | UTF8     | English_United States.1252 | En
glish_United States.1252 | =c/postgres          +
           |          |          |                            |
                         | postgres=CTc/postgres
(4 rows)


postgres=> \c nodelogin
You are now connected to database "nodelogin" as user "gaurav".
nodelogin=> create table users
nodelogin-> (id BIGSERIAL primary key not null,
nodelogin(> name varchar(200) not null,
nodelogin(> email varchar(200) not null,
nodelogin(> password varchar(200) not null,
nodelogin(> unique (email));
CREATE TABLE
nodelogin=> select * from users;
 id | name | email | password
----+------+-------+----------
(0 rows)


nodelogin=> \d users;
                                     Table "public.users"
  Column  |          Type          | Collation | Nullable |
       Default
----------+------------------------+-----------+----------+-------
----------------------------
 id       | bigint                 |           | not null | nextva
l('users_id_seq'::regclass)
 name     | character varying(200) |           | not null |
 email    | character varying(200) |           | not null |
 password | character varying(200) |           | not null |
Indexes:
    "users_pkey" PRIMARY KEY, btree (id)
    "users_email_key" UNIQUE CONSTRAINT, btree (email)


add in package json
"scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js"
  }

npm i nodemon,ejs

create server.js

create views

npm install bcrypt and dotenv
setup dbConfig.js and .env

nodelogin=> insert into users (name,email,password) values ('kats
uki', 'kbakugo@email.com','password');
INSERT 0 1
nodelogin=> select * from users
nodelogin-> ;
 id |  name   |       email       | password
----+---------+-------------------+----------
  1 | katsuki | kbakugo@email.com | password
(1 row)